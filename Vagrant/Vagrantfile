# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'net/ssh'
require 'yaml'

required_plugins = %w(
  vagrant-hostmanager
  vagrant-sshfs
)

def ip(n)
  "#{IP_PREFIX}.#{n}"
end

GB=1024

IP_PREFIX="192.168.59 " # vbox virtual bridge
NODE_RAM=4096
DISK_SIZE=20*GB
ADD_DISK_FLAG=false

MACHINES= [
  { name: "jenkins"   , ip: ip(134), primary: false, cpus: 2, mem: NODE_RAM  , add_disk: ADD_DISK_FLAG, size: DISK_SIZE },
  # { name: "nexus"   , ip: ip(135), primary: false, cpus: 2, mem: NODE_RAM  , add_disk: ADD_DISK_FLAG, size: DISK_SIZE },
  # { name: "sonar"   , ip: ip(136), primary: false, cpus: 2, mem: NODE_RAM  , add_disk: ADD_DISK_FLAG, size: DISK_SIZE },
]



Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-18.04"

  MACHINES.each do |m|
    node = m[:name]
    config.vm.define node, primary: m[:primary] do |c|
      c.vm.hostname = "#{node}.example.com"
      c.vm.network :private_network, :ip => m[:ip]
      c.hostmanager.aliases = [node]

      c.vm.provider "virtualbox" do |vb|
        vb.cpus = m[:cpus]
        vb.memory = m[:mem]
        
        add_disk vb, c.vm.hostname, m[:size], 1, 0 if m[:add_disk]
        # add_disk vb, c.vm.hostname, m[:size], 1, 1 if m[:add_disk]
      end

    end
  end

end


# Vagrant.configure("2") do |config| 
#    config.vm.define "master" do |subconfig|
#  # box settings
#   subconfig.vm.box = "ubuntu/trusty64"
#   subconfig.vm.hostname = "master"
#   subconfig.vm.provider "virtualbox"
#   config.ssh.username = 'root'
#   config.ssh.password = 'vagrant'
#   config.ssh.insert_key = 'true'
#    #provider settings
#  # netowrk settings
#   # via 127.0.0.1 to disable public access
#   # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
#    subconfig.vm.network "private_network", ip: "192.168.56.100"
#   # config.vm.network "public_network"
#   config.vm.provider "virtualbox" do |vb|
#     vb.memory = 2048
#     vb.cpus = 4
#   end
#   config.vm.provision "ansible" do |ansible|
#     ansible.verbose = "vv"
#     ansible.playbook = "main.yml"
#   end 

  
#  #provision settings
#   # config.vm.provision "shell", inline: <<-SHELL
#   #   apt-get update
#   # SHELL
# end


# end